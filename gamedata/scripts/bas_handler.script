play_sound_on_location = ballistics_utils.play_sound_on_location
play_particle       = ballistics_utils.play_particle

local grok_adb_pba_check = false
if grok_actor_damage_balancer and grok_actor_damage_balancer.PBA_a_obh then
	grok_adb_pba_check = true
end

weakened = {}
local weakened_timer = {}

local mutant_anim_table = {
    [clsid.bloodsucker_s] = "stand_scared_0",
    [clsid.boar_s] ="lie_sleep_0",
    [clsid.flesh_s] = "lie_idle_0",
    [clsid.pseudodog_s] = "lie_sleep_0",
    [clsid.cat_s] = "stand_look_around_0",
    [clsid.psy_dog_s] = "lie_sleep_0",
    [clsid.zombie_s] = "stand_die_0",
    [clsid.controller_s] = "critical_hit_torso_0",
}

function corrosive_cloud(npc, bone_id)
    local effect = particles_object("artefact\\effects\\af_acidic_idle_color")
    play_particle(npc, bone_id, "artefact\\effects\\af_acidic_show_01")
    play_sound_on_location("acid", npc)
    level.iterate_nearest(npc:position(), 5, function(obj)
        if obj and obj:id() ~= AC_ID then
			if not obj:alive() then return end
			if not (IsMonster(obj) or IsStalker(obj)) then return end
			if weakened[obj:id()] and weakened[obj:id()] > 0 then
				weakened[obj:id()] = weakened[obj:id()] + 1
			else
				weakened[obj:id()] = 1
				if not IsStalker(obj) and not weakened[obj:id()] then
					weakened_timer[obj:id()] = {
						time_blind = game.get_game_time()
					}
				end
			end
            effect:play_at_pos(obj:position())
        end
    end)
end

--------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------
function cloudkill_dmg_reduction(shit)
	if not shit.draftsman then return end
	if shit.draftsman:id() == db.actor:id() then return end
	
    if weakened[shit.draftsman:id()] then
		local damage_reduction = 1 - (weakened[shit.draftsman:id()] * 0.15)
		damage_reduction = clamp(damage_reduction, 0.15, 0.90)
        shit.power = shit.power * damage_reduction
		display_reduction = tonumber(100 - (damage_reduction * 100))
		printf("[ArtiGrok - BaS Handler] Cloudkill DMG reduction: %s%", display_reduction)
    end
end

function cloudkill_dmg_increase(victim, shit)
    if weakened[victim:id()] then
		local damage_increase = (weakened[victim:id()] * 0.2)
        shit.power = shit.power * (1 + damage_increase)
		display_increase = tonumber((damage_increase * 100))
		printf("[ArtiGrok - BaS Handler] Cloudkill DMG Increase: %s%", display_increase)
    end
end

-- For users using base Grok ADB, this will ensure the Cloudkill damage-to-actor reduction gets factored in
if grok_adb_pba_check then
	local base_adb_pda = grok_actor_damage_balancer.PBA_a_obh
	function grok_actor_damage_balancer.PBA_a_obh(shit, bone_id, flags)
		cloudkill_dmg_reduction(shit)
		base_adb_pda(shit, bone_id, flags)
	end
end

-- For users not using Grok ADB or modified in some way, this will ensure that Cloudkill damage-to-actor reduction gets factored in
function actor_on_before_hit(shit,bone_id, flags)
	cloudkill_dmg_reduction(shit)
end

function check_stun()
	for j, _ in pairs(weakened_timer) do
        local monster = level.object_by_id(j)
		local current_time = game.get_game_time()
        if (monster and mutant_anim_table[monster:clsid()]) then
			local monster_id = monster:id()
            local animation = mutant_anim_table[monster:clsid()]
            if (not animation) then return end

            if (current_time:diffSec(weakened_timer[monster_id].time_blind) < 40) then
                monster:set_override_animation(animation)
			else
				weakened_timer[monster_id] = nil
			end
       end
	end
end


function se_on_unregister(se)
    weakened[se.id] = nil
end

function on_death_callback(npc, who)
    if weakened[npc:id()] then weakened[npc:id()] = nil end
end

function on_game_start()
    RegisterScriptCallback("npc_on_death_callback", on_death_callback)
    RegisterScriptCallback("monster_on_death_callback", on_death_callback)
	
	RegisterScriptCallback("npc_on_before_hit",cloudkill_dmg_increase)
	RegisterScriptCallback("monster_on_before_hit",cloudkill_dmg_increase)
	
	if not grok_adb_pba_check then
		RegisterScriptCallback("actor_on_before_hit",actor_on_before_hit)
	end
	
    RegisterScriptCallback("server_entity_on_unregister", se_on_unregister)
	RegisterScriptCallback("actor_on_update", check_stun)
end