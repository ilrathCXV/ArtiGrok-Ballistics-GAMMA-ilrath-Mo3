----------------------------------------------------
----- EDIT for ArtiGrok - ilrathCXV (01/17/23) -----
----------------------------------------------------

-- Utility scripts to help calculate things.

get_config = ballistics_mcm.get_config

ini_ammo = ini_file("ammo\\importer.ltx")
ini_damage = ini_file("creatures\\damages.ltx")

ini_sounds = ini_file("ammo\\sounds.ltx")

Bone_IDs = {
	[1]  =  "bip01_pelvis", 
    [2]  =	"bip01_pelvis",
    [3]  =	"bip01_l_thigh",
    [4]  =	"bip01_l_calf",
    [5]  =	"bip01_l_foot",
	[6]  =  "bip01_l_foot", 
    [7]  =	"bip01_r_thigh",
    [8]  =	"bip01_r_calf",
    [9]  =	"bip01_r_foot",
	[10] =  "bip01_r_foot", 
    [11] =	"bip01_spine",
    [12] =	"bip01_spine1",
    [13] =	"bip01_spine2",
    -- head
    [14] =	"bip01_neck", 
    [15] =	"bip01_head",
    [16] =	"eye_left",
    [17] =	"eye_right",
    [18] =	"eyelid_1",
    [19] =	"jaw_1",
    -- endhead
	[20] = "bip01_l_clavicle", 
	[21] = "bip01_l_upperarm", 
	[22] = "bip01_l_forearm", 
	[23] = "bip01_l_hand", 
	[24] = "bip01_l_hand", 
	[25] = "bip01_l_hand", 
	[26] = "bip01_l_hand", 
	[27] = "bip01_l_hand", 
	[28] = "bip01_l_hand", 
	[29] = "bip01_l_hand", 
	[30] = "bip01_l_hand", 
	[31] = "bip01_l_hand", 
	[32] = "bip01_l_hand", 
	[33] = "bip01_r_clavicle", 
	[34] = "bip01_r_upperarm", 
	[35] = "bip01_r_forearm", 
	[36] = "bip01_r_hand", 
	[37] = "bip01_r_hand", 
	[38] = "bip01_r_hand", 
	[39] = "bip01_r_hand", 
	[40] = "bip01_r_hand", 
	[41] = "bip01_r_hand", 
	[42] = "bip01_r_hand", 
	[43] = "bip01_r_hand", 
	[44] = "bip01_r_hand", 
	[45] = "bip01_r_hand", 
	[46] = "bip01_pelvis", 
}

head_bones = {
        
    [14] =	"bip01_neck", 
    [15] =	"bip01_head",
    [16] =	"eye_left",
    [17] =	"eye_right",
    [18] =	"eyelid_1",
    [19] =	"jaw_1",
}

center_mass = {
    
	[1]  =  "bip01_pelvis", 
    [2]  =	"bip01_pelvis", 
    [11] =	"bip01_spine",
    [12] =	"bip01_spine1",
    [13] =	"bip01_spine2",
	[20] = "bip01_l_clavicle", 
	[33] = "bip01_r_clavicle",
	[46] = "bip01_pelvis", 
}


limbs = {
    [3]  = "bip01_l_thigh",
    [4]  = "bip01_l_calf",
	[6]  = "bip01_l_toe0", 
    [7]  = "bip01_r_thigh",
    [8]  = "bip01_r_calf",
	[10] = "bip01_r_toe0", 
	[22] = "bip01_l_forearm", 
	[24] = "bip01_l_finger0", 
	[25] = "bip01_l_finger01", 
	[26] = "bip01_l_finger02", 
	[27] = "bip01_l_finger1", 
	[28] = "bip01_l_finger11", 
	[29] = "bip01_l_finger12", 
	[30] = "bip01_l_finger2", 
	[31] = "bip01_l_finger21", 
	[32] = "bip01_l_finger22", 
	[35] = "bip01_r_forearm",
	[37] = "bip01_r_finger0", 
	[38] = "bip01_r_finger01", 
	[39] = "bip01_r_finger02", 
	[40] = "bip01_r_finger1", 
	[41] = "bip01_r_finger11", 
	[42] = "bip01_r_finger12", 
	[43] = "bip01_r_finger2", 
	[44] = "bip01_r_finger21", 
	[45] = "bip01_r_finger22", 
}
-- play particle at npc bone
function play_particle(npc, bone_id, name)
	if not npc then return end
    bone_id = (not bone_id or bone_id == 65535) and 1 or bone_id
    bone_name = Bone_IDs[bone_id] or "bip01_spine"
    local particle = particles_object(name)
    local bone_pos = npc:bone_position(bone_name)
    
    if particle and not particle:playing() then
        particle:play_at_pos(bone_pos)
    end
end

-- play a particle at the weapon bone firepoint. good for emulating fancier muzzle fx
function play_particle_firepoint(name)
    local wpn = db.actor:active_item()
    if not wpn then return end

    last_particle = particles_object(name)
    if last_particle and not last_particle:playing() then
        local hud = utils_data.read_from_ini(nil,wpn:section(),"hud","string",nil)
        local fire_bone = utils_data.read_from_ini(nil,hud,"fire_bone","string",nil) or "wpn_body"
        local offset = utils_data.read_from_ini(nil,hud,"fire_point","string",nil) or VEC_ZERO
        offset = offset and utils_data.string_to_vector(offset)
        last_particle:play_at_pos( wpn:bone_position(fire_bone, true), offset ) 
        CreateTimeEvent("particle_stop", math.random(30), 0.7, 
        function()
            last_particle:stop()
            return true
        end)
    end
end

-- play some sounds that scale based on distance
function play_sound_on_location(snd, npc, distance)
	if not snd or not npc or not ini_sounds:section_exist(snd) then
		return
	end
    distance = distance or get_distance(db.actor, npc)
    play_sound_distance(snd, distance)
end

function play_sound_distance(snd, distance)
    to_use = distance > 10 and ini_sounds:r_string_ex(snd, "far") and "far" or "near"
    snd_to_play = ini_sounds:r_string_ex(snd, to_use)
    if not snd_to_play then return end
    snd_to_play = snd_to_play .. math.random(ini_sounds:r_float_ex(snd, to_use.."_amt") or 1)
	local s = xr_sound.get_safe_sound_object(snd_to_play)
	if s then
        -- printf("[Ballistics Utils] Playing %s", snd_to_play)
		s:play(db.actor, 0, sound_object.s2d)
        -- snd.volume = 1
		s.volume = (distance > 10) and 0.3 + (0.7 * (1 - (clamp(distance, 2, 100) - 2)/98)) or 1
		return s
	end
end

function get_distance(shooter, npc)
    local npc_pos = npc:position()
	local shooter_pos = shooter:position()
	return npc_pos:distance_to(shooter_pos)
end