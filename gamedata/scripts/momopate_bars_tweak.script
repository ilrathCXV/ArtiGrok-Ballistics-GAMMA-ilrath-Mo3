printf("Momo Bar Tweaks are disabled to fix visual bug for GAMMA 0.9.3")

--[[
local mas = momopate_accurate_stats
local mas_mod = mas.modifiers
local mas_gop = mas.get_outfit_protection
local mas_gor = mas.get_other_regens
local mas_gap = mas.get_arti_protection

local og = ui_inventory.UIInventory.UpdateStats
function ui_inventory.UIInventory:UpdateStats()
	og(self)
	
	local actor = db.actor
	
	self.stat_list["radia"]			= { min= 0, max= 3.87,							hint= "ui_inv_radiation_protection"		}
	self.stat_list["acid"]			= { min= 0, max= mas_mod["ChemicalBurn"][3],	hint= "ui_inv_chemical_burn_protection"	}
	self.stat_list["shock"]			= { min= 0, max= mas_mod["Shock"][3],			hint= "ui_inv_shock_protection"			}
	self.stat_list["fire"]			= { min= 0, max= mas_mod["Burn"][3],			hint= "ui_inv_burn_protection" 			}
	self.stat_list["psi"]			= { min= 0, max= mas_mod["Telepatic"][3],		hint= "ui_inv_telepatic_protection"		}
	self.stat_list["wound"]			= { min= 0, max= mas_mod["Wound"][3],			hint= "ui_inv_wound_protection"			}
	self.stat_list["fire_wound"]	= { min= 0, max= mas_mod["FireWound"][3],		hint= "ui_inv_fire_wound_protection"	}
	
	for name,val in pairs(self.stat_outfit) do
		self.stat_outfit[name] = 0
	end
	
	local outfit = actor:item_in_slot(7)
	if outfit then
		local sec = outfit:section()
		
		self.stat_outfit["fire"]  		= (mas_gop(outfit, sec, "Burn", 			0) / 100) or 0
		self.stat_outfit["shock"] 		= (mas_gop(outfit, sec, "Shock",			0) / 100) or 0
		self.stat_outfit["acid"]  		= (mas_gop(outfit, sec, "ChemicalBurn", 	0) / 100) or 0
		self.stat_outfit["radia"] 		= (mas_gop(outfit, sec, "Radiation", 		0) / 100) or 0
		self.stat_outfit["psi"]   		= (mas_gop(outfit, sec, "Telepatic", 		0) / 100) or 0
		self.stat_outfit["wound"] 		= (mas_gop(outfit, sec, "Wound", 			0) / 100) or 0
		self.stat_outfit["fire_wound"] 	= (mas_gop(outfit, sec, "FireWound", 		0) / 100) or 0
	end
	
	for name,val in pairs(self.stat_helm) do
		self.stat_helm[name] = 0
	end
	
	local helm = actor:item_in_slot(12)
	if helm then
		local sec = helm:section()
		
		self.stat_helm["fire"]  		= (mas_gop(helm, sec, "Burn", 			0) / 100) or 0
		self.stat_helm["shock"] 		= (mas_gop(helm, sec, "Shock",			0) / 100) or 0
		self.stat_helm["acid"]  		= (mas_gop(helm, sec, "ChemicalBurn", 	0) / 100) or 0
		self.stat_helm["radia"] 		= (mas_gop(helm, sec, "Radiation", 		0) / 100) or 0
		self.stat_helm["psi"]   		= (mas_gop(helm, sec, "Telepatic", 		0) / 100) or 0
		self.stat_helm["wound"] 		= (mas_gop(helm, sec, "Wound", 			0) / 100) or 0
		self.stat_helm["fire_wound"] 	= (mas_gop(helm, sec, "FireWound", 		0) / 100) or 0
	end
	
	for name,val in pairs(self.stat_arty) do
		self.stat_arty[name] = 0
	end
	
	actor:iterate_belt( function(owner, obj)
		local sec = obj:section()
		
		self.stat_arty["power"]      = self.stat_arty["power"]      + ((mas_gor(obj, sec, "Power", 0) / 100) or 0)
		self.stat_arty["radia"]      = self.stat_arty["radia"]      * (1 + ((mas_gap(obj, sec, "Radiation", 0) / 100) or 0))
		self.stat_arty["acid"]       = self.stat_arty["acid"]       + ((mas_gap(obj, sec, "ChemicalBurn", 0) / 100) or 0)
		self.stat_arty["shock"]      = self.stat_arty["shock"]      + ((mas_gap(obj, sec, "Shock", 0) / 100) or 0)
		self.stat_arty["fire"]       = self.stat_arty["fire"]       + ((mas_gap(obj, sec, "Burn", 0) / 100) or 0)
		self.stat_arty["psi"]        = self.stat_arty["psi"]        + ((mas_gap(obj, sec, "Telepatic", 0) / 100) or 0)
		self.stat_arty["wound"]      = self.stat_arty["wound"]      + ((mas_gap(obj, sec, "Wound", 0) / 100) or 0)
		self.stat_arty["fire_wound"] = self.stat_arty["fire_wound"] + ((mas_gap(obj, sec, "FireWound", 0) / 100) or 0)
	end)
	
	for name, val in pairs(self.stat_boost) do
		self.stat_boost[name] = 0
	end

	actor:cast_Actor():conditions():BoosterForEach( function(booster_type, booster_time, booster_value)
		local boost_id = self.boost_id[booster_type]
		if boost_id then
			if (boost_id == 5) then 
				booster_value = booster_value * 100
			elseif (boost_id == 6) then 
				booster_value = booster_value * mas_mod["Telepatic"][1] * mas_mod["Telepatic"][2] 
			elseif (boost_id == 1) then
				booster_value = booster_value * 300
			end
			
			self.stat_boost[boost_id] = booster_value
		end
	end)
	
	local radia_val = ((self.stat_outfit["radia"] + self.stat_helm["radia"] + self.stat_arty["radia"] + self.stat_boost["radia"]) / self.stat_list["radia"].max)
	self.stat["radia"].bar:SetProgressPos( clamp( radia_val, 0, 1) )
	
	local acid_val = ((self.stat_outfit["acid"] + self.stat_helm["acid"] + self.stat_arty["acid"] + self.stat_boost["acid"]) / self.stat_list["acid"].max)
	self.stat["acid"].bar:SetProgressPos( clamp( acid_val, 0, 1) )

	local shock_val = ((self.stat_outfit["shock"] + self.stat_helm["shock"] + self.stat_arty["shock"] + self.stat_boost["shock"]) / self.stat_list["shock"].max)
	self.stat["shock"].bar:SetProgressPos( clamp( shock_val, 0, 1) )

	local fire_val = ((self.stat_outfit["fire"] + self.stat_helm["fire"] + self.stat_arty["fire"] + self.stat_boost["fire"]) / self.stat_list["fire"].max)
	self.stat["fire"].bar:SetProgressPos( clamp( fire_val, 0, 1) )

	local psi_val = ((self.stat_outfit["psi"] + self.stat_helm["psi"] + self.stat_arty["psi"] + self.stat_boost["psi"]) / self.stat_list["psi"].max)
	self.stat["psi"].bar:SetProgressPos( clamp( psi_val, 0, 1) )

	local wound_val = ((self.stat_outfit["wound"] + self.stat_helm["wound"] + self.stat_arty["wound"] + self.stat_boost["wound"]) / self.stat_list["wound"].max)
	self.stat["wound"].bar:SetProgressPos( clamp( wound_val, 0, 1) )

	local fire_wound_val = ((((self.stat_outfit["fire_wound"] + self.stat_helm["fire_wound"]) / 2) + self.stat_arty["fire_wound"] + self.stat_boost["fire_wound"]) / self.stat_list["fire_wound"].max)
	self.stat["fire_wound"].bar:SetProgressPos( clamp( fire_wound_val, 0, 1) )
end
--]]